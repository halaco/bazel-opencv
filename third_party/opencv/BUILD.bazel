load("@rules_cc//cc:defs.bzl", "cc_binary")

load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

_CACHE_ENTRIES = {
    "CMAKE_BUILD_TYPE": "Release",
    "BUILD_DOCS": "no",
    "BUILD_EXAMPLES": "no",
    "BUILD_LIST": "core,imgproc,imgcodecs,videoio,highgui",
    "BUILD_PROTOBUF": "no",
    "ENABLE_CCACHE": "no",
    "ENABLE_PRECOMPILED_HEADERS": "no",
    "WITH_OPENEXR": "no",
    "WITH_TIFF": "no",
    "WITH_WEBP": "no",
    "WITH_PNG": "yes",
    "WITH_FFMPEG": "no",
}

cmake(
    name = "opencv",
    build_args = [
        "--",
        "-j",
    ],
    cache_entries = select({
        "//conditions:default": _CACHE_ENTRIES,
    }),
    lib_source = "@org_opencv//:all",
    linkopts = [
        "-ldl",
    ],
    out_include_dir = "include/opencv4",
    out_shared_libs = [
        "libopencv_core.so.408",
        "libopencv_highgui.so.408",
        "libopencv_imgproc.so.408",
        "libopencv_imgcodecs.so.408",
        "libopencv_videoio.so.408",
    ],
    alwayslink = True,
    visibility = ["//visibility:public"],
    deps = [
        #        "@com_google_protobuf//:protobuf",
        #        "@com_google_protobuf//:protobuf_lite",
        #        "@com_google_protobuf//:protoc_lib",
        #        "@eigen",
        #        "@ffmpeg",
        #        "@libpng",
    ],
)
